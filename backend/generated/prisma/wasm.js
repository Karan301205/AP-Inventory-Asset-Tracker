
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ShopkeeperScalarFieldEnum = {
  shop_id: 'shop_id',
  shop_name: 'shop_name',
  name: 'name',
  email: 'email',
  password: 'password'
};

exports.Prisma.CustomerScalarFieldEnum = {
  cust_id: 'cust_id',
  cust_name: 'cust_name',
  email: 'email',
  phone: 'phone',
  address: 'address',
  shop_id: 'shop_id'
};

exports.Prisma.ItemScalarFieldEnum = {
  item_id: 'item_id',
  item_name: 'item_name',
  category: 'category',
  stock: 'stock',
  price: 'price',
  shop_id: 'shop_id'
};

exports.Prisma.TransactionScalarFieldEnum = {
  transaction_id: 'transaction_id',
  bill_no: 'bill_no',
  bill_date: 'bill_date',
  qty: 'qty',
  item_price: 'item_price',
  total_price: 'total_price',
  shop_id: 'shop_id',
  cust_id: 'cust_id',
  item_id: 'item_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.ShopkeeperOrderByRelevanceFieldEnum = {
  shop_name: 'shop_name',
  name: 'name',
  email: 'email',
  password: 'password'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.CustomerOrderByRelevanceFieldEnum = {
  cust_name: 'cust_name',
  email: 'email',
  phone: 'phone',
  address: 'address'
};

exports.Prisma.ItemOrderByRelevanceFieldEnum = {
  item_name: 'item_name',
  category: 'category'
};

exports.Prisma.TransactionOrderByRelevanceFieldEnum = {
  bill_no: 'bill_no'
};


exports.Prisma.ModelName = {
  Shopkeeper: 'Shopkeeper',
  Customer: 'Customer',
  Item: 'Item',
  Transaction: 'Transaction'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/parthsingh/Desktop/Inventory-Asset-Tracker/backend/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/parthsingh/Desktop/Inventory-Asset-Tracker/backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Shopkeeper {\n  shop_id   Int    @id @default(autoincrement())\n  shop_name String @unique\n  name      String\n  email     String @unique\n  password  String\n\n  // Relations\n  customers    Customer[]\n  items        Item[]\n  transactions Transaction[]\n}\n\nmodel Customer {\n  cust_id   Int     @id @default(autoincrement())\n  cust_name String\n  email     String?\n  phone     String?\n  address   String?\n\n  // Foreign key → Shopkeeper\n  shop_id    Int\n  shopkeeper Shopkeeper @relation(fields: [shop_id], references: [shop_id])\n\n  // Relations\n  transactions Transaction[]\n}\n\nmodel Item {\n  item_id   Int     @id @default(autoincrement())\n  item_name String\n  category  String?\n  stock     Int?\n  price     Decimal @db.Decimal(10, 2)\n\n  // Foreign key → Shopkeeper\n  shop_id    Int\n  shopkeeper Shopkeeper @relation(fields: [shop_id], references: [shop_id])\n\n  // Relations\n  transactions Transaction[]\n}\n\nmodel Transaction {\n  transaction_id Int      @id @default(autoincrement())\n  bill_no        String?\n  bill_date      DateTime @default(now())\n  qty            Int\n  item_price     Decimal  @db.Decimal(10, 2)\n  total_price    Decimal  @db.Decimal(10, 2)\n\n  // Foreign keys\n  shop_id    Int\n  shopkeeper Shopkeeper @relation(fields: [shop_id], references: [shop_id])\n\n  cust_id  Int?\n  customer Customer? @relation(fields: [cust_id], references: [cust_id])\n\n  item_id Int\n  item    Item @relation(fields: [item_id], references: [item_id])\n}\n",
  "inlineSchemaHash": "12991b482cee937d2bf2411c9965c1dc9841a5a55a8eae655d1d43d024eb6021",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Shopkeeper\":{\"fields\":[{\"name\":\"shop_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shop_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customers\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToShopkeeper\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"ItemToShopkeeper\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"ShopkeeperToTransaction\"}],\"dbName\":null},\"Customer\":{\"fields\":[{\"name\":\"cust_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cust_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shop_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shopkeeper\",\"kind\":\"object\",\"type\":\"Shopkeeper\",\"relationName\":\"CustomerToShopkeeper\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"CustomerToTransaction\"}],\"dbName\":null},\"Item\":{\"fields\":[{\"name\":\"item_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stock\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"shop_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shopkeeper\",\"kind\":\"object\",\"type\":\"Shopkeeper\",\"relationName\":\"ItemToShopkeeper\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"ItemToTransaction\"}],\"dbName\":null},\"Transaction\":{\"fields\":[{\"name\":\"transaction_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bill_no\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bill_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"qty\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item_price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"total_price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"shop_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"shopkeeper\",\"kind\":\"object\",\"type\":\"Shopkeeper\",\"relationName\":\"ShopkeeperToTransaction\"},{\"name\":\"cust_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToTransaction\"},{\"name\":\"item_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"item\",\"kind\":\"object\",\"type\":\"Item\",\"relationName\":\"ItemToTransaction\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

